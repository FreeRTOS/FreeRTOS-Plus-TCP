/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_NETWORKBUFFERMANAGEMENT_H
#define _MOCK_NETWORKBUFFERMANAGEMENT_H

#include "unity.h"
#include <stdbool.h>
#include <stdint.h>
#include <fcntl.h>
#include <unity.h>
#include "FreeRTOS.h"
#include "FreeRTOS_IP.h"
#include "NetworkBufferManagement.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_NetworkBufferManagement_Init(void);
void mock_NetworkBufferManagement_Destroy(void);
void mock_NetworkBufferManagement_Verify(void);




#define xNetworkBuffersInitialise_IgnoreAndReturn(cmock_retval) xNetworkBuffersInitialise_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xNetworkBuffersInitialise_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define xNetworkBuffersInitialise_StopIgnore() xNetworkBuffersInitialise_CMockStopIgnore()
void xNetworkBuffersInitialise_CMockStopIgnore(void);
#define xNetworkBuffersInitialise_ExpectAndReturn(cmock_retval) xNetworkBuffersInitialise_CMockExpectAndReturn(__LINE__, cmock_retval)
void xNetworkBuffersInitialise_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
typedef BaseType_t (* CMOCK_xNetworkBuffersInitialise_CALLBACK)(int cmock_num_calls);
void xNetworkBuffersInitialise_AddCallback(CMOCK_xNetworkBuffersInitialise_CALLBACK Callback);
void xNetworkBuffersInitialise_Stub(CMOCK_xNetworkBuffersInitialise_CALLBACK Callback);
#define xNetworkBuffersInitialise_StubWithCallback xNetworkBuffersInitialise_Stub
#define pxGetNetworkBufferWithDescriptor_IgnoreAndReturn(cmock_retval) pxGetNetworkBufferWithDescriptor_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void pxGetNetworkBufferWithDescriptor_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, NetworkBufferDescriptor_t* cmock_to_return);
#define pxGetNetworkBufferWithDescriptor_StopIgnore() pxGetNetworkBufferWithDescriptor_CMockStopIgnore()
void pxGetNetworkBufferWithDescriptor_CMockStopIgnore(void);
#define pxGetNetworkBufferWithDescriptor_ExpectAnyArgsAndReturn(cmock_retval) pxGetNetworkBufferWithDescriptor_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void pxGetNetworkBufferWithDescriptor_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, NetworkBufferDescriptor_t* cmock_to_return);
#define pxGetNetworkBufferWithDescriptor_ExpectAndReturn(xRequestedSizeBytes, xBlockTimeTicks, cmock_retval) pxGetNetworkBufferWithDescriptor_CMockExpectAndReturn(__LINE__, xRequestedSizeBytes, xBlockTimeTicks, cmock_retval)
void pxGetNetworkBufferWithDescriptor_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, size_t xRequestedSizeBytes, TickType_t xBlockTimeTicks, NetworkBufferDescriptor_t* cmock_to_return);
typedef NetworkBufferDescriptor_t* (* CMOCK_pxGetNetworkBufferWithDescriptor_CALLBACK)(size_t xRequestedSizeBytes, TickType_t xBlockTimeTicks, int cmock_num_calls);
void pxGetNetworkBufferWithDescriptor_AddCallback(CMOCK_pxGetNetworkBufferWithDescriptor_CALLBACK Callback);
void pxGetNetworkBufferWithDescriptor_Stub(CMOCK_pxGetNetworkBufferWithDescriptor_CALLBACK Callback);
#define pxGetNetworkBufferWithDescriptor_StubWithCallback pxGetNetworkBufferWithDescriptor_Stub
#define pxGetNetworkBufferWithDescriptor_IgnoreArg_xRequestedSizeBytes() pxGetNetworkBufferWithDescriptor_CMockIgnoreArg_xRequestedSizeBytes(__LINE__)
void pxGetNetworkBufferWithDescriptor_CMockIgnoreArg_xRequestedSizeBytes(UNITY_LINE_TYPE cmock_line);
#define pxGetNetworkBufferWithDescriptor_IgnoreArg_xBlockTimeTicks() pxGetNetworkBufferWithDescriptor_CMockIgnoreArg_xBlockTimeTicks(__LINE__)
void pxGetNetworkBufferWithDescriptor_CMockIgnoreArg_xBlockTimeTicks(UNITY_LINE_TYPE cmock_line);
#define pxNetworkBufferGetFromISR_IgnoreAndReturn(cmock_retval) pxNetworkBufferGetFromISR_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void pxNetworkBufferGetFromISR_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, NetworkBufferDescriptor_t* cmock_to_return);
#define pxNetworkBufferGetFromISR_StopIgnore() pxNetworkBufferGetFromISR_CMockStopIgnore()
void pxNetworkBufferGetFromISR_CMockStopIgnore(void);
#define pxNetworkBufferGetFromISR_ExpectAnyArgsAndReturn(cmock_retval) pxNetworkBufferGetFromISR_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void pxNetworkBufferGetFromISR_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, NetworkBufferDescriptor_t* cmock_to_return);
#define pxNetworkBufferGetFromISR_ExpectAndReturn(xRequestedSizeBytes, cmock_retval) pxNetworkBufferGetFromISR_CMockExpectAndReturn(__LINE__, xRequestedSizeBytes, cmock_retval)
void pxNetworkBufferGetFromISR_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, size_t xRequestedSizeBytes, NetworkBufferDescriptor_t* cmock_to_return);
typedef NetworkBufferDescriptor_t* (* CMOCK_pxNetworkBufferGetFromISR_CALLBACK)(size_t xRequestedSizeBytes, int cmock_num_calls);
void pxNetworkBufferGetFromISR_AddCallback(CMOCK_pxNetworkBufferGetFromISR_CALLBACK Callback);
void pxNetworkBufferGetFromISR_Stub(CMOCK_pxNetworkBufferGetFromISR_CALLBACK Callback);
#define pxNetworkBufferGetFromISR_StubWithCallback pxNetworkBufferGetFromISR_Stub
#define pxNetworkBufferGetFromISR_IgnoreArg_xRequestedSizeBytes() pxNetworkBufferGetFromISR_CMockIgnoreArg_xRequestedSizeBytes(__LINE__)
void pxNetworkBufferGetFromISR_CMockIgnoreArg_xRequestedSizeBytes(UNITY_LINE_TYPE cmock_line);
#define vReleaseNetworkBufferAndDescriptor_Ignore() vReleaseNetworkBufferAndDescriptor_CMockIgnore()
void vReleaseNetworkBufferAndDescriptor_CMockIgnore(void);
#define vReleaseNetworkBufferAndDescriptor_StopIgnore() vReleaseNetworkBufferAndDescriptor_CMockStopIgnore()
void vReleaseNetworkBufferAndDescriptor_CMockStopIgnore(void);
#define vReleaseNetworkBufferAndDescriptor_ExpectAnyArgs() vReleaseNetworkBufferAndDescriptor_CMockExpectAnyArgs(__LINE__)
void vReleaseNetworkBufferAndDescriptor_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vReleaseNetworkBufferAndDescriptor_Expect(pxNetworkBuffer) vReleaseNetworkBufferAndDescriptor_CMockExpect(__LINE__, pxNetworkBuffer)
void vReleaseNetworkBufferAndDescriptor_CMockExpect(UNITY_LINE_TYPE cmock_line, NetworkBufferDescriptor_t* const pxNetworkBuffer);
typedef void (* CMOCK_vReleaseNetworkBufferAndDescriptor_CALLBACK)(NetworkBufferDescriptor_t* const pxNetworkBuffer, int cmock_num_calls);
void vReleaseNetworkBufferAndDescriptor_AddCallback(CMOCK_vReleaseNetworkBufferAndDescriptor_CALLBACK Callback);
void vReleaseNetworkBufferAndDescriptor_Stub(CMOCK_vReleaseNetworkBufferAndDescriptor_CALLBACK Callback);
#define vReleaseNetworkBufferAndDescriptor_StubWithCallback vReleaseNetworkBufferAndDescriptor_Stub
#define vReleaseNetworkBufferAndDescriptor_ExpectWithArray(pxNetworkBuffer, pxNetworkBuffer_Depth) vReleaseNetworkBufferAndDescriptor_CMockExpectWithArray(__LINE__, pxNetworkBuffer, pxNetworkBuffer_Depth)
void vReleaseNetworkBufferAndDescriptor_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, NetworkBufferDescriptor_t* const pxNetworkBuffer, int pxNetworkBuffer_Depth);
#define vReleaseNetworkBufferAndDescriptor_ReturnThruPtr_pxNetworkBuffer(pxNetworkBuffer) vReleaseNetworkBufferAndDescriptor_CMockReturnMemThruPtr_pxNetworkBuffer(__LINE__, pxNetworkBuffer, sizeof(NetworkBufferDescriptor_t))
#define vReleaseNetworkBufferAndDescriptor_ReturnArrayThruPtr_pxNetworkBuffer(pxNetworkBuffer, cmock_len) vReleaseNetworkBufferAndDescriptor_CMockReturnMemThruPtr_pxNetworkBuffer(__LINE__, pxNetworkBuffer, (int)(cmock_len * (int)sizeof(*pxNetworkBuffer)))
#define vReleaseNetworkBufferAndDescriptor_ReturnMemThruPtr_pxNetworkBuffer(pxNetworkBuffer, cmock_size) vReleaseNetworkBufferAndDescriptor_CMockReturnMemThruPtr_pxNetworkBuffer(__LINE__, pxNetworkBuffer, cmock_size)
void vReleaseNetworkBufferAndDescriptor_CMockReturnMemThruPtr_pxNetworkBuffer(UNITY_LINE_TYPE cmock_line, NetworkBufferDescriptor_t* pxNetworkBuffer, int cmock_size);
#define vReleaseNetworkBufferAndDescriptor_IgnoreArg_pxNetworkBuffer() vReleaseNetworkBufferAndDescriptor_CMockIgnoreArg_pxNetworkBuffer(__LINE__)
void vReleaseNetworkBufferAndDescriptor_CMockIgnoreArg_pxNetworkBuffer(UNITY_LINE_TYPE cmock_line);
#define vNetworkBufferReleaseFromISR_IgnoreAndReturn(cmock_retval) vNetworkBufferReleaseFromISR_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void vNetworkBufferReleaseFromISR_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define vNetworkBufferReleaseFromISR_StopIgnore() vNetworkBufferReleaseFromISR_CMockStopIgnore()
void vNetworkBufferReleaseFromISR_CMockStopIgnore(void);
#define vNetworkBufferReleaseFromISR_ExpectAnyArgsAndReturn(cmock_retval) vNetworkBufferReleaseFromISR_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void vNetworkBufferReleaseFromISR_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, BaseType_t cmock_to_return);
#define vNetworkBufferReleaseFromISR_ExpectAndReturn(pxNetworkBuffer, cmock_retval) vNetworkBufferReleaseFromISR_CMockExpectAndReturn(__LINE__, pxNetworkBuffer, cmock_retval)
void vNetworkBufferReleaseFromISR_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, NetworkBufferDescriptor_t* const pxNetworkBuffer, BaseType_t cmock_to_return);
typedef BaseType_t (* CMOCK_vNetworkBufferReleaseFromISR_CALLBACK)(NetworkBufferDescriptor_t* const pxNetworkBuffer, int cmock_num_calls);
void vNetworkBufferReleaseFromISR_AddCallback(CMOCK_vNetworkBufferReleaseFromISR_CALLBACK Callback);
void vNetworkBufferReleaseFromISR_Stub(CMOCK_vNetworkBufferReleaseFromISR_CALLBACK Callback);
#define vNetworkBufferReleaseFromISR_StubWithCallback vNetworkBufferReleaseFromISR_Stub
#define vNetworkBufferReleaseFromISR_ExpectWithArrayAndReturn(pxNetworkBuffer, pxNetworkBuffer_Depth, cmock_retval) vNetworkBufferReleaseFromISR_CMockExpectWithArrayAndReturn(__LINE__, pxNetworkBuffer, pxNetworkBuffer_Depth, cmock_retval)
void vNetworkBufferReleaseFromISR_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, NetworkBufferDescriptor_t* const pxNetworkBuffer, int pxNetworkBuffer_Depth, BaseType_t cmock_to_return);
#define vNetworkBufferReleaseFromISR_ReturnThruPtr_pxNetworkBuffer(pxNetworkBuffer) vNetworkBufferReleaseFromISR_CMockReturnMemThruPtr_pxNetworkBuffer(__LINE__, pxNetworkBuffer, sizeof(NetworkBufferDescriptor_t))
#define vNetworkBufferReleaseFromISR_ReturnArrayThruPtr_pxNetworkBuffer(pxNetworkBuffer, cmock_len) vNetworkBufferReleaseFromISR_CMockReturnMemThruPtr_pxNetworkBuffer(__LINE__, pxNetworkBuffer, (int)(cmock_len * (int)sizeof(*pxNetworkBuffer)))
#define vNetworkBufferReleaseFromISR_ReturnMemThruPtr_pxNetworkBuffer(pxNetworkBuffer, cmock_size) vNetworkBufferReleaseFromISR_CMockReturnMemThruPtr_pxNetworkBuffer(__LINE__, pxNetworkBuffer, cmock_size)
void vNetworkBufferReleaseFromISR_CMockReturnMemThruPtr_pxNetworkBuffer(UNITY_LINE_TYPE cmock_line, NetworkBufferDescriptor_t* pxNetworkBuffer, int cmock_size);
#define vNetworkBufferReleaseFromISR_IgnoreArg_pxNetworkBuffer() vNetworkBufferReleaseFromISR_CMockIgnoreArg_pxNetworkBuffer(__LINE__)
void vNetworkBufferReleaseFromISR_CMockIgnoreArg_pxNetworkBuffer(UNITY_LINE_TYPE cmock_line);
#define pucGetNetworkBuffer_IgnoreAndReturn(cmock_retval) pucGetNetworkBuffer_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void pucGetNetworkBuffer_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t* cmock_to_return);
#define pucGetNetworkBuffer_StopIgnore() pucGetNetworkBuffer_CMockStopIgnore()
void pucGetNetworkBuffer_CMockStopIgnore(void);
#define pucGetNetworkBuffer_ExpectAnyArgsAndReturn(cmock_retval) pucGetNetworkBuffer_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void pucGetNetworkBuffer_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t* cmock_to_return);
#define pucGetNetworkBuffer_ExpectAndReturn(pxRequestedSizeBytes, cmock_retval) pucGetNetworkBuffer_CMockExpectAndReturn(__LINE__, pxRequestedSizeBytes, cmock_retval)
void pucGetNetworkBuffer_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, size_t* pxRequestedSizeBytes, uint8_t* cmock_to_return);
typedef uint8_t* (* CMOCK_pucGetNetworkBuffer_CALLBACK)(size_t* pxRequestedSizeBytes, int cmock_num_calls);
void pucGetNetworkBuffer_AddCallback(CMOCK_pucGetNetworkBuffer_CALLBACK Callback);
void pucGetNetworkBuffer_Stub(CMOCK_pucGetNetworkBuffer_CALLBACK Callback);
#define pucGetNetworkBuffer_StubWithCallback pucGetNetworkBuffer_Stub
#define pucGetNetworkBuffer_ExpectWithArrayAndReturn(pxRequestedSizeBytes, pxRequestedSizeBytes_Depth, cmock_retval) pucGetNetworkBuffer_CMockExpectWithArrayAndReturn(__LINE__, pxRequestedSizeBytes, pxRequestedSizeBytes_Depth, cmock_retval)
void pucGetNetworkBuffer_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, size_t* pxRequestedSizeBytes, int pxRequestedSizeBytes_Depth, uint8_t* cmock_to_return);
#define pucGetNetworkBuffer_ReturnThruPtr_pxRequestedSizeBytes(pxRequestedSizeBytes) pucGetNetworkBuffer_CMockReturnMemThruPtr_pxRequestedSizeBytes(__LINE__, pxRequestedSizeBytes, sizeof(size_t))
#define pucGetNetworkBuffer_ReturnArrayThruPtr_pxRequestedSizeBytes(pxRequestedSizeBytes, cmock_len) pucGetNetworkBuffer_CMockReturnMemThruPtr_pxRequestedSizeBytes(__LINE__, pxRequestedSizeBytes, (int)(cmock_len * (int)sizeof(*pxRequestedSizeBytes)))
#define pucGetNetworkBuffer_ReturnMemThruPtr_pxRequestedSizeBytes(pxRequestedSizeBytes, cmock_size) pucGetNetworkBuffer_CMockReturnMemThruPtr_pxRequestedSizeBytes(__LINE__, pxRequestedSizeBytes, cmock_size)
void pucGetNetworkBuffer_CMockReturnMemThruPtr_pxRequestedSizeBytes(UNITY_LINE_TYPE cmock_line, size_t* pxRequestedSizeBytes, int cmock_size);
#define pucGetNetworkBuffer_IgnoreArg_pxRequestedSizeBytes() pucGetNetworkBuffer_CMockIgnoreArg_pxRequestedSizeBytes(__LINE__)
void pucGetNetworkBuffer_CMockIgnoreArg_pxRequestedSizeBytes(UNITY_LINE_TYPE cmock_line);
#define vReleaseNetworkBuffer_Ignore() vReleaseNetworkBuffer_CMockIgnore()
void vReleaseNetworkBuffer_CMockIgnore(void);
#define vReleaseNetworkBuffer_StopIgnore() vReleaseNetworkBuffer_CMockStopIgnore()
void vReleaseNetworkBuffer_CMockStopIgnore(void);
#define vReleaseNetworkBuffer_ExpectAnyArgs() vReleaseNetworkBuffer_CMockExpectAnyArgs(__LINE__)
void vReleaseNetworkBuffer_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vReleaseNetworkBuffer_Expect(pucEthernetBuffer) vReleaseNetworkBuffer_CMockExpect(__LINE__, pucEthernetBuffer)
void vReleaseNetworkBuffer_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8_t* pucEthernetBuffer);
typedef void (* CMOCK_vReleaseNetworkBuffer_CALLBACK)(uint8_t* pucEthernetBuffer, int cmock_num_calls);
void vReleaseNetworkBuffer_AddCallback(CMOCK_vReleaseNetworkBuffer_CALLBACK Callback);
void vReleaseNetworkBuffer_Stub(CMOCK_vReleaseNetworkBuffer_CALLBACK Callback);
#define vReleaseNetworkBuffer_StubWithCallback vReleaseNetworkBuffer_Stub
#define vReleaseNetworkBuffer_ExpectWithArray(pucEthernetBuffer, pucEthernetBuffer_Depth) vReleaseNetworkBuffer_CMockExpectWithArray(__LINE__, pucEthernetBuffer, pucEthernetBuffer_Depth)
void vReleaseNetworkBuffer_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, uint8_t* pucEthernetBuffer, int pucEthernetBuffer_Depth);
#define vReleaseNetworkBuffer_ReturnThruPtr_pucEthernetBuffer(pucEthernetBuffer) vReleaseNetworkBuffer_CMockReturnMemThruPtr_pucEthernetBuffer(__LINE__, pucEthernetBuffer, sizeof(uint8_t))
#define vReleaseNetworkBuffer_ReturnArrayThruPtr_pucEthernetBuffer(pucEthernetBuffer, cmock_len) vReleaseNetworkBuffer_CMockReturnMemThruPtr_pucEthernetBuffer(__LINE__, pucEthernetBuffer, (int)(cmock_len * (int)sizeof(*pucEthernetBuffer)))
#define vReleaseNetworkBuffer_ReturnMemThruPtr_pucEthernetBuffer(pucEthernetBuffer, cmock_size) vReleaseNetworkBuffer_CMockReturnMemThruPtr_pucEthernetBuffer(__LINE__, pucEthernetBuffer, cmock_size)
void vReleaseNetworkBuffer_CMockReturnMemThruPtr_pucEthernetBuffer(UNITY_LINE_TYPE cmock_line, uint8_t* pucEthernetBuffer, int cmock_size);
#define vReleaseNetworkBuffer_IgnoreArg_pucEthernetBuffer() vReleaseNetworkBuffer_CMockIgnoreArg_pucEthernetBuffer(__LINE__)
void vReleaseNetworkBuffer_CMockIgnoreArg_pucEthernetBuffer(UNITY_LINE_TYPE cmock_line);
#define uxGetNumberOfFreeNetworkBuffers_IgnoreAndReturn(cmock_retval) uxGetNumberOfFreeNetworkBuffers_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void uxGetNumberOfFreeNetworkBuffers_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, UBaseType_t cmock_to_return);
#define uxGetNumberOfFreeNetworkBuffers_StopIgnore() uxGetNumberOfFreeNetworkBuffers_CMockStopIgnore()
void uxGetNumberOfFreeNetworkBuffers_CMockStopIgnore(void);
#define uxGetNumberOfFreeNetworkBuffers_ExpectAndReturn(cmock_retval) uxGetNumberOfFreeNetworkBuffers_CMockExpectAndReturn(__LINE__, cmock_retval)
void uxGetNumberOfFreeNetworkBuffers_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, UBaseType_t cmock_to_return);
typedef UBaseType_t (* CMOCK_uxGetNumberOfFreeNetworkBuffers_CALLBACK)(int cmock_num_calls);
void uxGetNumberOfFreeNetworkBuffers_AddCallback(CMOCK_uxGetNumberOfFreeNetworkBuffers_CALLBACK Callback);
void uxGetNumberOfFreeNetworkBuffers_Stub(CMOCK_uxGetNumberOfFreeNetworkBuffers_CALLBACK Callback);
#define uxGetNumberOfFreeNetworkBuffers_StubWithCallback uxGetNumberOfFreeNetworkBuffers_Stub
#define uxGetMinimumFreeNetworkBuffers_IgnoreAndReturn(cmock_retval) uxGetMinimumFreeNetworkBuffers_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void uxGetMinimumFreeNetworkBuffers_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, UBaseType_t cmock_to_return);
#define uxGetMinimumFreeNetworkBuffers_StopIgnore() uxGetMinimumFreeNetworkBuffers_CMockStopIgnore()
void uxGetMinimumFreeNetworkBuffers_CMockStopIgnore(void);
#define uxGetMinimumFreeNetworkBuffers_ExpectAndReturn(cmock_retval) uxGetMinimumFreeNetworkBuffers_CMockExpectAndReturn(__LINE__, cmock_retval)
void uxGetMinimumFreeNetworkBuffers_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, UBaseType_t cmock_to_return);
typedef UBaseType_t (* CMOCK_uxGetMinimumFreeNetworkBuffers_CALLBACK)(int cmock_num_calls);
void uxGetMinimumFreeNetworkBuffers_AddCallback(CMOCK_uxGetMinimumFreeNetworkBuffers_CALLBACK Callback);
void uxGetMinimumFreeNetworkBuffers_Stub(CMOCK_uxGetMinimumFreeNetworkBuffers_CALLBACK Callback);
#define uxGetMinimumFreeNetworkBuffers_StubWithCallback uxGetMinimumFreeNetworkBuffers_Stub
#define pxDuplicateNetworkBufferWithDescriptor_IgnoreAndReturn(cmock_retval) pxDuplicateNetworkBufferWithDescriptor_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void pxDuplicateNetworkBufferWithDescriptor_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, NetworkBufferDescriptor_t* cmock_to_return);
#define pxDuplicateNetworkBufferWithDescriptor_StopIgnore() pxDuplicateNetworkBufferWithDescriptor_CMockStopIgnore()
void pxDuplicateNetworkBufferWithDescriptor_CMockStopIgnore(void);
#define pxDuplicateNetworkBufferWithDescriptor_ExpectAnyArgsAndReturn(cmock_retval) pxDuplicateNetworkBufferWithDescriptor_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void pxDuplicateNetworkBufferWithDescriptor_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, NetworkBufferDescriptor_t* cmock_to_return);
#define pxDuplicateNetworkBufferWithDescriptor_ExpectAndReturn(pxNetworkBuffer, uxNewLength, cmock_retval) pxDuplicateNetworkBufferWithDescriptor_CMockExpectAndReturn(__LINE__, pxNetworkBuffer, uxNewLength, cmock_retval)
void pxDuplicateNetworkBufferWithDescriptor_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const NetworkBufferDescriptor_t* const pxNetworkBuffer, size_t uxNewLength, NetworkBufferDescriptor_t* cmock_to_return);
typedef NetworkBufferDescriptor_t* (* CMOCK_pxDuplicateNetworkBufferWithDescriptor_CALLBACK)(const NetworkBufferDescriptor_t* const pxNetworkBuffer, size_t uxNewLength, int cmock_num_calls);
void pxDuplicateNetworkBufferWithDescriptor_AddCallback(CMOCK_pxDuplicateNetworkBufferWithDescriptor_CALLBACK Callback);
void pxDuplicateNetworkBufferWithDescriptor_Stub(CMOCK_pxDuplicateNetworkBufferWithDescriptor_CALLBACK Callback);
#define pxDuplicateNetworkBufferWithDescriptor_StubWithCallback pxDuplicateNetworkBufferWithDescriptor_Stub
#define pxDuplicateNetworkBufferWithDescriptor_ExpectWithArrayAndReturn(pxNetworkBuffer, pxNetworkBuffer_Depth, uxNewLength, cmock_retval) pxDuplicateNetworkBufferWithDescriptor_CMockExpectWithArrayAndReturn(__LINE__, pxNetworkBuffer, pxNetworkBuffer_Depth, uxNewLength, cmock_retval)
void pxDuplicateNetworkBufferWithDescriptor_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, const NetworkBufferDescriptor_t* const pxNetworkBuffer, int pxNetworkBuffer_Depth, size_t uxNewLength, NetworkBufferDescriptor_t* cmock_to_return);
#define pxDuplicateNetworkBufferWithDescriptor_IgnoreArg_pxNetworkBuffer() pxDuplicateNetworkBufferWithDescriptor_CMockIgnoreArg_pxNetworkBuffer(__LINE__)
void pxDuplicateNetworkBufferWithDescriptor_CMockIgnoreArg_pxNetworkBuffer(UNITY_LINE_TYPE cmock_line);
#define pxDuplicateNetworkBufferWithDescriptor_IgnoreArg_uxNewLength() pxDuplicateNetworkBufferWithDescriptor_CMockIgnoreArg_uxNewLength(__LINE__)
void pxDuplicateNetworkBufferWithDescriptor_CMockIgnoreArg_uxNewLength(UNITY_LINE_TYPE cmock_line);
#define pxResizeNetworkBufferWithDescriptor_IgnoreAndReturn(cmock_retval) pxResizeNetworkBufferWithDescriptor_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void pxResizeNetworkBufferWithDescriptor_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, NetworkBufferDescriptor_t* cmock_to_return);
#define pxResizeNetworkBufferWithDescriptor_StopIgnore() pxResizeNetworkBufferWithDescriptor_CMockStopIgnore()
void pxResizeNetworkBufferWithDescriptor_CMockStopIgnore(void);
#define pxResizeNetworkBufferWithDescriptor_ExpectAnyArgsAndReturn(cmock_retval) pxResizeNetworkBufferWithDescriptor_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void pxResizeNetworkBufferWithDescriptor_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, NetworkBufferDescriptor_t* cmock_to_return);
#define pxResizeNetworkBufferWithDescriptor_ExpectAndReturn(pxNetworkBuffer, xNewSizeBytes, cmock_retval) pxResizeNetworkBufferWithDescriptor_CMockExpectAndReturn(__LINE__, pxNetworkBuffer, xNewSizeBytes, cmock_retval)
void pxResizeNetworkBufferWithDescriptor_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, NetworkBufferDescriptor_t* pxNetworkBuffer, size_t xNewSizeBytes, NetworkBufferDescriptor_t* cmock_to_return);
typedef NetworkBufferDescriptor_t* (* CMOCK_pxResizeNetworkBufferWithDescriptor_CALLBACK)(NetworkBufferDescriptor_t* pxNetworkBuffer, size_t xNewSizeBytes, int cmock_num_calls);
void pxResizeNetworkBufferWithDescriptor_AddCallback(CMOCK_pxResizeNetworkBufferWithDescriptor_CALLBACK Callback);
void pxResizeNetworkBufferWithDescriptor_Stub(CMOCK_pxResizeNetworkBufferWithDescriptor_CALLBACK Callback);
#define pxResizeNetworkBufferWithDescriptor_StubWithCallback pxResizeNetworkBufferWithDescriptor_Stub
#define pxResizeNetworkBufferWithDescriptor_ExpectWithArrayAndReturn(pxNetworkBuffer, pxNetworkBuffer_Depth, xNewSizeBytes, cmock_retval) pxResizeNetworkBufferWithDescriptor_CMockExpectWithArrayAndReturn(__LINE__, pxNetworkBuffer, pxNetworkBuffer_Depth, xNewSizeBytes, cmock_retval)
void pxResizeNetworkBufferWithDescriptor_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, NetworkBufferDescriptor_t* pxNetworkBuffer, int pxNetworkBuffer_Depth, size_t xNewSizeBytes, NetworkBufferDescriptor_t* cmock_to_return);
#define pxResizeNetworkBufferWithDescriptor_ReturnThruPtr_pxNetworkBuffer(pxNetworkBuffer) pxResizeNetworkBufferWithDescriptor_CMockReturnMemThruPtr_pxNetworkBuffer(__LINE__, pxNetworkBuffer, sizeof(NetworkBufferDescriptor_t))
#define pxResizeNetworkBufferWithDescriptor_ReturnArrayThruPtr_pxNetworkBuffer(pxNetworkBuffer, cmock_len) pxResizeNetworkBufferWithDescriptor_CMockReturnMemThruPtr_pxNetworkBuffer(__LINE__, pxNetworkBuffer, (int)(cmock_len * (int)sizeof(*pxNetworkBuffer)))
#define pxResizeNetworkBufferWithDescriptor_ReturnMemThruPtr_pxNetworkBuffer(pxNetworkBuffer, cmock_size) pxResizeNetworkBufferWithDescriptor_CMockReturnMemThruPtr_pxNetworkBuffer(__LINE__, pxNetworkBuffer, cmock_size)
void pxResizeNetworkBufferWithDescriptor_CMockReturnMemThruPtr_pxNetworkBuffer(UNITY_LINE_TYPE cmock_line, NetworkBufferDescriptor_t* pxNetworkBuffer, int cmock_size);
#define pxResizeNetworkBufferWithDescriptor_IgnoreArg_pxNetworkBuffer() pxResizeNetworkBufferWithDescriptor_CMockIgnoreArg_pxNetworkBuffer(__LINE__)
void pxResizeNetworkBufferWithDescriptor_CMockIgnoreArg_pxNetworkBuffer(UNITY_LINE_TYPE cmock_line);
#define pxResizeNetworkBufferWithDescriptor_IgnoreArg_xNewSizeBytes() pxResizeNetworkBufferWithDescriptor_CMockIgnoreArg_xNewSizeBytes(__LINE__)
void pxResizeNetworkBufferWithDescriptor_CMockIgnoreArg_xNewSizeBytes(UNITY_LINE_TYPE cmock_line);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
